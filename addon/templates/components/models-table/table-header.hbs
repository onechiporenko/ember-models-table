{{#let
  (hash
    RowSorting=(
      component themeInstance.rowSortingComponent
      processedColumns=processedColumns
      visibleProcessedColumns=visibleProcessedColumns
      themeInstance=themeInstance
      selectedItems=selectedItems
      expandedItems=expandedItems
      useDataGrouping=useDataGrouping
      displayGroupedValueAs=displayGroupedValueAs
      groupHeaderCellComponent=groupHeaderCellComponent
      currentGroupingPropertyName=currentGroupingPropertyName
      sort=doSort
      data=data
      expandAllRows=expandAllRows
      collapseAllRows=collapseAllRows
      toggleAllSelection=toggleAllSelection
    )
    RowFiltering=(
      component themeInstance.rowFilteringComponent
      processedColumns=processedColumns
      visibleProcessedColumns=visibleProcessedColumns
      themeInstance=themeInstance
      selectedItems=selectedItems
      expandedItems=expandedItems
      useDataGrouping=useDataGrouping
      displayGroupedValueAs=displayGroupedValueAs
      expandAllRows=expandAllRows
      collapseAllRows=collapseAllRows
      toggleAllSelection=toggleAllSelection
    )
    GroupedHeader=(
      component themeInstance.groupedHeaderComponent
      useDataGrouping=useDataGrouping
      displayGroupedValueAs=displayGroupedValueAs
      visibleProcessedColumns=visibleProcessedColumns
      themeInstance=themeInstance
    )
  )
as |TableHeader|}}
  {{#if (has-block)}}
    {{yield TableHeader}}
  {{else}}
    {{#if groupedHeaders.length}}
      {{#each groupedHeaders as |groupedHeader|}}
        <TableHeader.GroupedHeader
          @groupedHeader={{groupedHeader}}/>
      {{/each}}
    {{/if}}
    <TableHeader.RowSorting/>
    {{#if useFilteringByColumns}}
      <TableHeader.RowFiltering/>
    {{/if}}
  {{/if}}
{{/let}}
