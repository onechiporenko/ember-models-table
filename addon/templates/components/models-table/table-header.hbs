{{#let
  (hash
    RowSorting=(
      component this.themeInstance.rowSortingComponent
      processedColumns=this.processedColumns
      visibleProcessedColumns=this.visibleProcessedColumns
      themeInstance=this.themeInstance
      selectedItems=this.selectedItems
      expandedItems=this.expandedItems
      useDataGrouping=this.useDataGrouping
      displayGroupedValueAs=this.displayGroupedValueAs
      groupHeaderCellComponent=this.groupHeaderCellComponent
      currentGroupingPropertyName=this.currentGroupingPropertyName
      sort=this.doSort
      data=this.data
      expandAllRows=this.expandAllRows
      collapseAllRows=this.collapseAllRows
      toggleAllSelection=this.toggleAllSelection
    )
    RowFiltering=(
      component this.themeInstance.rowFilteringComponent
      processedColumns=this.processedColumns
      visibleProcessedColumns=this.visibleProcessedColumns
      themeInstance=this.themeInstance
      selectedItems=this.selectedItems
      expandedItems=this.expandedItems
      useDataGrouping=this.useDataGrouping
      displayGroupedValueAs=this.displayGroupedValueAs
      expandAllRows=this.expandAllRows
      collapseAllRows=this.collapseAllRows
      toggleAllSelection=this.toggleAllSelection
    )
    GroupedHeader=(
      component this.themeInstance.groupedHeaderComponent
      useDataGrouping=this.useDataGrouping
      displayGroupedValueAs=this.displayGroupedValueAs
      visibleProcessedColumns=this.visibleProcessedColumns
      themeInstance=this.themeInstance
    )
  )
as |TableHeader|}}
  {{#if (has-block)}}
    {{yield TableHeader}}
  {{else}}
    {{#if this.groupedHeaders.length}}
      {{#each this.groupedHeaders as |groupedHeader|}}
        <TableHeader.GroupedHeader
          @groupedHeader={{groupedHeader}}/>
      {{/each}}
    {{/if}}
    <TableHeader.RowSorting/>
    {{#if this.useFilteringByColumns}}
      <TableHeader.RowFiltering/>
    {{/if}}
  {{/if}}
{{/let}}
