{{#let
  (hash
    ColumnsHidden=(
      component themeInstance.columnsHiddenComponent
      columnsCount=columnsCount
      themeInstance=themeInstance
    )
    Row=(
      component themeInstance.rowComponent
      visibleProcessedColumns=visibleProcessedColumns
      groupingRowComponent=groupingRowComponent
      collapsedGroupValues=collapsedGroupValues
      currentGroupingPropertyName=currentGroupingPropertyName
      clickOnRow=doClickOnRow
      doubleClickOnRow=doubleClickOnRow
      hoverOnRow=hoverOnRow
      outRow=outRow
      expandRow=expandRow
      collapseRow=collapseRow
      expandAllRows=expandAllRows
      collapseAllRows=collapseAllRows
      themeInstance=themeInstance
      selectedItems=selectedItems
      expandedItems=expandedItems
      displayGroupedValueAs=displayGroupedValueAs
      toggleGroupedRows=toggleGroupedRows
      toggleGroupedRowsSelection=toggleGroupedRowsSelection
      toggleGroupedRowsExpands=toggleGroupedRowsExpands
      useDataGrouping=useDataGrouping
    )
    RowExpand=(
      component themeInstance.rowExpandComponent
      expandedRowComponent=expandedRowComponent
      selectedItems=selectedItems
      processedColumns=processedColumns
      visibleProcessedColumns=visibleProcessedColumns
      clickOnRow=doClickOnRow
      themeInstance=themeInstance
    )
    NoData=(
      component themeInstance.noDataComponent
      columnsCount=visibleProcessedColumns.length
      displayGroupedValueAs=displayGroupedValueAs
      themeInstance=themeInstance
    )
    RowGrouping=(
      component themeInstance.rowGroupingComponent
      groupingRowComponent=groupingRowComponent
      currentGroupingPropertyName=currentGroupingPropertyName
      visibleProcessedColumns=visibleProcessedColumns
      toggleGroupedRows=toggleGroupedRows
      displayGroupedValueAs=displayGroupedValueAs
      selectedItems=selectedItems
      expandedItems=expandedItems
      toggleGroupedRowsSelection=toggleGroupedRowsSelection
      toggleGroupedRowsExpands=toggleGroupedRowsExpands
      themeInstance=themeInstance
    )
  )
as |TableBody|}}
  {{#if (has-block)}}
    {{yield TableBody}}
  {{else}}
    {{#if allColumnsAreHidden}}
      <TableBody.ColumnsHidden/>
    {{else}}
      {{#if useDataGrouping}}
        {{#each groupedVisibleContentValuesOrder as |groupedValue groupedIndex|}}
          {{#let
            (filter-by
              currentGroupingPropertyName
              groupedValue
              groupedArrangedContent)
              as |groupedItems|}}
            {{#let
              (object-at groupedIndex groupedVisibleContent)as |visibleGroupedItems|}}
              {{#let
                (component TableBody.RowGrouping
                  groupedValue=groupedValue
                  groupedLength=groupedItems.length
                  groupedItems=groupedItems
                  visibleGroupedItems=visibleGroupedItems
                )
                as |RowGrouping|}}
                {{#if (is-equal displayGroupedValueAs "row")}}
                  <RowGrouping
                    @groupIsCollapsed={{exists-in collapsedGroupValues groupedValue}}
                    @visibleGroupedLength={{visibleGroupedItems.length}} />
                {{/if}}
                {{#if (exists-in collapsedGroupValues groupedValue)}}
                  {{#if (is-equal displayGroupedValueAs "column")}}
                    <RowGrouping
                      @groupIsCollapsed={{true}}
                      @visibleGroupedLength={{visibleGroupedItems.length}}/>
                  {{/if}}
                {{else}}
                  {{#each visibleGroupedItems as |record index|}}
                    <TableBody.Row
                      @record={{record}}
                      @index={{index}}
                      @groupedValue={{groupedValue}}
                      @groupedLength={{groupedItems.length}}
                      @groupedItems={{groupedItems}}
                      @groupSummaryRowComponent={{groupSummaryRowComponent}}
                      @visibleGroupedItems={{visibleGroupedItems}}/>
                    {{#if (exists-in expandedItems record)}}
                      <TableBody.RowExpand
                        @record={{record}}
                        @index={{index}} />
                    {{/if}}
                  {{/each}}
                  {{#if groupSummaryRowComponent}}
                    {{#let
                      (component
                        groupSummaryRowComponent
                        visibleProcessedColumns=visibleProcessedColumns
                        themeInstance=themeInstance
                        groupedItems=groupedItems
                        selectedItems=selectedItems
                        expandedItems=expandedItems
                        visibleGroupedItems=visibleGroupedItems)
                      as |GroupSummaryRow|}}
                      <GroupSummaryRow/>
                    {{/let}}
                  {{/if}}
                {{/if}}
              {{/let}}
            {{/let}}
          {{/let}}
        {{else}}
          <TableBody.NoData/>
        {{/each}}
      {{else}}
        {{#each visibleContent as |record index|}}
          <TableBody.Row
            @record={{record}}
            @index={{index}}/>
          {{#if (exists-in expandedItems record)}}
            <TableBody.RowExpand
              @expandedRowComponent={{expandedRowComponent}}
              @record={{record}}
              @index={{index}}/>
          {{/if}}
        {{else}}
          <TableBody.NoData/>
        {{/each}}
      {{/if}}
    {{/if}}
  {{/if}}
{{/let}}