{{#let
  (hash
    Summary=(
      component themeInstance.summaryComponent
      firstIndex=firstIndex
      lastIndex=lastIndex
      recordsCount=recordsCount
      anyFilterUsed=anyFilterUsed
      themeInstance=themeInstance
      clearFilters=clearFilters
      useNumericPagination=useNumericPagination
    )
    SizeSelect=(
      component themeInstance.pageSizeSelectComponent
      type="number"
      pageSizeOptions=pageSizeOptions
      pageSize=pageSize
      themeInstance=themeInstance
    )
    PaginationNumeric=(
      component themeInstance.paginationNumericComponent
      currentPageNumber=currentPageNumber
      collapseNumPaginationForPagesCount=collapseNumPaginationForPagesCount
      recordsCount=recordsCount
      pageSize=pageSize
      currentPageNumberOptions=currentPageNumberOptions
      pagesCount=pagesCount
      themeInstance=themeInstance
      showCurrentPageNumberSelect=showCurrentPageNumberSelect
      goToPage=goToPage
    )
    PaginationSimple=(
      component themeInstance.paginationSimpleComponent
      currentPageNumber=currentPageNumber
      recordsCount=recordsCount
      pagesCount=pagesCount
      currentPageNumberOptions=currentPageNumberOptions
      pageSize=pageSize
      themeInstance=themeInstance
      showCurrentPageNumberSelect=showCurrentPageNumberSelect
      goToPage=goToPage
    )
    themeInstance=themeInstance
  )
as |Footer|}}
  <div class={{themeInstance.tfooterInternalWrapper}}>
    {{#if (has-block)}}
      {{yield Footer}}
    {{else}}
      <Footer.Summary/>
      <div class={{themeInstance.pageSizeWrapper}}>
        {{#if showPageSize}}
          <Footer.SizeSelect/>
        {{/if}}
      </div>
      {{#if useNumericPagination}}
        <Footer.PaginationNumeric/>
      {{else}}
        <Footer.PaginationSimple/>
      {{/if}}
    {{/if}}
  </div>
{{/let}}
